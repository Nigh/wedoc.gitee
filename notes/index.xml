<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>指导笔记 on 闲一文档</title><link>https://xianii.gitee.io/wedoc/notes/</link><description>Recent content in 指导笔记 on 闲一文档</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://xianii.gitee.io/wedoc/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>nRF52开发笔记</title><link>https://xianii.gitee.io/wedoc/notes/nrf52note/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xianii.gitee.io/wedoc/notes/nrf52note/</guid><description>在GNU toolchain中更改UICR配置 以SES环境使能CONFIG_NFCT_PINS_AS_GPIOS为例。仅仅在预编译宏中添加CONFIG_NFCT_PINS_AS_GPIOS宏定义是无效的。需要修改linker文件。
这里，我们需要在0x1000120C地址写入0xFFFFFFFE。首先在linker文件的MEMORY段中定义这个地址如下：
UICR_NFC_MEM (r) : ORIGIN = 0x1000120C, LENGTH = 0x04 然后新建一个SECTIONS描述如下：
SECTIONS { .uicr_nfc : { KEEP(*(.uicr_nfc)) } &amp;gt; UICR_NFC_MEM } 接下来我们在一个确定会编译的c文件中加入如下代码，一般我们放在main.c中：
#ifdef CONFIG_NFCT_PINS_AS_GPIOS volatile uint32_t UICR_ADDR_0x20C __attribute__((section(&amp;#34;uicr_nfc&amp;#34;))) = 0xFFFFFFFE; #endif 其中，变量名可以随意定义。宏定义也非必须。
最后，我们对芯片执行全部擦除，然后项目执行rebuild，之后再烧录就可以正常写入UICR配置了。
设置最大MTU与开启扩展广播 指定#define NRF_SDH_BLE_GATT_MAX_MTU_SIZE 247宏开启最大MTU
在advertising_init()中添加init.config.ble_adv_extended_enabled = true;配置即可直接使能扩展广播
nRF52从机发送缓冲区溢出报错 BLE从机发送缓冲区溢出会导致发送中断，并在下一次发送时发生断开。需要捕获和处理报错。
可以额外添加一级缓冲，并对超出缓冲区的部分做丢弃处理。
nRF52 广播包拼接 当m_advertising.adv_data.adv_data.len与其中EIR长度之和不等时，发生的解析错误可能将相邻广播包连接起来。
其机制还需进一步分析了解。
nRF52 蓝牙更新广播信息 使用ble_advertising_advdata_update更新广播信息时。
在广播开启时，更改内容实时生效，更改广播长度在下一次开启广播时生效
nRF52连接间隔与通信带宽问题 在CSW-V1上，在250ms连接间隔下，使用request方式通信只能达到2Hz左右的频率。 在CSW-V1上，在250ms连接间隔下，使用command方式通信，延迟在1-2个连接间隔。 在CSW-B5上，在250ms连接间隔下，使用command方式通信，延迟在几十ms之内，且在80ms内即返回了24个数据包。同时，测试功耗没有异常。 更改gap_conn_cfg.event_length至16可实现每个连接间隔可返回20+个数据包
gap_conn_cfg.event_length默认值为3，其为一个以1.25ms为单位的窗口时间，每个连接间隔能够通信的时长由这个窗口的时间决定。
蓝牙在有效距离内易断开 断开原因为:0x08(timeout)</description></item><item><title>备忘杂记</title><link>https://xianii.gitee.io/wedoc/notes/memo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xianii.gitee.io/wedoc/notes/memo/</guid><description>windows terminal + oh-my-posh3 + theme 为win10配置windows terminal的主题。
当无法识别AllowPrerelease参数时，可能是因为PowershellGet版本太旧。
通过Get-module PowershellGet取得当前版本
通过Find-module PowershellGet取得最新版本
通过Install-Module PowershellGet -Force安装最新版本
安装 Install-Module posh-git -Scope CurrentUser
Install-Module oh-my-posh -AllowPrerelease -Scope CurrentUser
如遇魔女结界，则使用爱与魔法。
配置 使用notepad $PROFILE编辑powershell的配置文件，添加如下内容：
Import-Module posh-git Import-Module oh-my-posh Get-PoshThemes Set-PoshPrompt -Theme Paradox 打开windows terminal的配置文件，为powershell添加如下配置，可以使得终端打开时的默认路径即为打开的目录。
&amp;#34;startingDirectory&amp;#34; : null 然后更改字体和颜色主题，可以直接添加到defaults里面，这样直接对所有终端都生效：
&amp;#34;fontFace&amp;#34;: &amp;#34;Monofurbold NF&amp;#34;, &amp;#34;colorScheme&amp;#34;:&amp;#34;Tango Dark&amp;#34; 其中，字体需要安装，地址见参考文献。
官方使用的字体是Meslo LGM NF，体积比较大(63.8Mb)。
这里选用的是微软出品的Cascadia Code PL体积比较小(7.8Mb)。
根据官方描述，任意的Nerd Font应当都是兼容的。可以在nerdfonts.com网站浏览。
参考文献: https://github.com/JanDeDobbeleer/oh-my-posh3 https://ohmyposh.dev/docs/ https://www.nerdfonts.com/ https://github.com/microsoft/cascadia-code/releases https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Monofur.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip zsh + oh my zsh + theme 为Linux安装zsh shell并配置主题。</description></item><item><title>愛と魔法</title><link>https://xianii.gitee.io/wedoc/notes/magic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xianii.gitee.io/wedoc/notes/magic/</guid><description>代理魔法 Git 设置：
git config --global http.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 取消：
git config --global --unset http.proxy git config --global --unset https.proxy Linux shell 设置：
export http_proxy=http://127.0.0.1:1080 export https_proxy=https://127.0.0.1:1080 export https_proxy=&amp;quot;socks5://127.0.0.1:1080&amp;quot; 取消：
命令只对当前终端生效，重启终端即可 或者unset http_proxy Powershell $Env:http_proxy=&amp;quot;http://127.0.0.1:1080&amp;quot;; $Env:https_proxy=&amp;quot;http://127.0.0.1:1080&amp;quot; cmd 设置：
set http_proxy=http://127.0.0.1:1080 set https_proxy=http://127.0.0.1:1080 set http_proxy_user=user set http_proxy_pass=pass set https_proxy_user=user set https_proxy_pass=pass 取消：
set http_proxy= set https_proxy= 验证 由于 ping 不走代理，可以使用 curl -v https://www.</description></item><item><title>技术架构</title><link>https://xianii.gitee.io/wedoc/notes/frameworks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://xianii.gitee.io/wedoc/notes/frameworks/</guid><description>Electron 使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用
优点：
缺点：
Flutter2 创建高性能、跨平台的移动应用
优点：
缺点：
Golang + Fyne 基于 Golang 的跨平台Material Design风格的GUI库
优点：
缺点：
Golang + Wails 使用 Golang 和 Web 技术构建桌面应用
优点：
后端使用标准Golang
使用任意前端技术构建UI
单条命令绑定Golang方法到前端
原生渲染，无需嵌入浏览器
共享事件系统
原生文件对话框
强大的命令行工具
多平台
缺点：
Arduino 优点：</description></item></channel></rss>