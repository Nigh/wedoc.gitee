[{"uri":"https://xianii.gitee.io/wedoc/","title":"","tags":[],"description":"","content":"闲一·文档 其名闲一取自xianii的谐音。\n目录  开发环境    工具链   集成环境    指导笔记    nRF52开发笔记   Zephyr笔记   备忘杂记   愛と魔法   技术架构   装机笔记    模板用例     "},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/arm-gcc/","title":"ARM-GCC","tags":[],"description":"ARM-GCC工具链","content":"提供ARM GCC工具。\n下载安装 Ubuntu sudo apt install gcc-arm-none-eabi\nWindows 下载  https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads  安装  直接安装，并将\\bin目录添加进入环境变量PATH即可。  建议使用MSYS2安装。需要注意的是，在MSYS2中安装的工具链，要在MSYS2的MINGW终端中使用。\n "},{"uri":"https://xianii.gitee.io/wedoc/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/gdbgui/","title":"gdbgui[Linux]","tags":[],"description":"linux上的gdb图形前端","content":"官方在0.14.0.0版本移除了对windows的支持，windows用户可以自行摸索安装0.13.2.1之前的版本。\n安装  安装依赖：sudo apt-get install gdb python3 官方推荐使用pipx安装，先安装pipx  python3 -m pip install --user pipx python3 -m userpath append ~/.local/bin 重启终端以便刷新userpath   安装gdbgui：pipx install gdbgui  "},{"uri":"https://xianii.gitee.io/wedoc/notes/osnotes/linux/","title":"Linux","tags":[],"description":"Linux环境下的常用软件","content":"  出于站点性质考虑，仅列出较为通用的软件，比较专业的软件就不在此列出了\n Coming soon \u0026hellip;\u0026hellip; "},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/gnu-make/","title":"make[Win]","tags":[],"description":"一个维护截止于2006年的make.exe","content":"为Windows提供make工具。\nGNU make是一个维护截止于2006年的项目，建议使用MSYS2来安装make工具链。\n 下载  http://gnuwin32.sourceforge.net/packages/make.htm  安装 直接安装，并将\\bin目录添加进入环境变量PATH即可。\n"},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/msys2/","title":"MSYS2[Win]","tags":[],"description":"windows上的软件分发和构建平台","content":"MSYS2是一个Windows上的软件分发和构建平台。集合了许多用于软件构建的库和工具。\n安装 官网：https://www.msys2.org/\n推荐使用chocolatey安装:\nchoco install msys2\n安装完成后，打开MSYS2的终端，以下命令均需要在MSYS2的终端中使用。\n首先，更换软件源，修改/msys64/etc/pacman.d中的三个mirrorlist文件，将国内源放到最前面。\n重新打开msys终端，更新package库：pacman -Syu\n如果主体需要更新，会要求关闭终端再重新打开，然后才能更新package：pacman -Su\n其中:\n\u0026gt; 静态库的路径为: msys2\\usr\\lib msys2\\mingw64\\lib \u0026gt; 头文件的路径为: msys2\\usr\\include msys2\\mingw64\\include 注意： 在MSYS2中安装的工具链，应当在MSYS2的MINGW终端中使用，否则会发生错误。\n安装package  GCC: pacman -S gcc make: pacman -S make ARM-GCC: pacman -S mingw-w64-x86_64-arm-none-eabi-gcc OpenOCD: pacman -S mingw-w64-x86_64-openocd CMake: pacman -S cmake ninja: pacman -S ninja  使用windows terminal  https://www.msys2.org/docs/terminals/  "},{"uri":"https://xianii.gitee.io/wedoc/notes/nrf52note/","title":"nRF52开发笔记","tags":[],"description":"","content":"nRF52从机发送缓冲区溢出报错 BLE从机发送缓冲区溢出会导致发送中断，并在下一次发送时发生断开。需要捕获和处理报错。\n可以额外添加一级缓冲，并对超出缓冲区的部分做丢弃处理。\n nRF52 广播包拼接 当m_advertising.adv_data.adv_data.len与其中EIR长度之和不等时，发生的解析错误可能将相邻广播包连接起来。\n其机制还需进一步分析了解。\n nRF52 蓝牙更新广播信息 使用ble_advertising_advdata_update更新广播信息时。\n在广播开启时，更改内容实时生效，更改广播长度在下一次开启广播时生效\n nRF52连接间隔与通信带宽问题  在CSW-V1上，在250ms连接间隔下，使用request方式通信只能达到2Hz左右的频率。 在CSW-V1上，在250ms连接间隔下，使用command方式通信，延迟在1-2个连接间隔。 在CSW-B5上，在250ms连接间隔下，使用command方式通信，延迟在几十ms之内，且在80ms内即返回了24个数据包。同时，测试功耗没有异常。  更改gap_conn_cfg.event_length至16可实现每个连接间隔可返回20+个数据包\ngap_conn_cfg.event_length默认值为3，其为一个以1.25ms为单位的窗口时间，每个连接间隔能够通信的时长由这个窗口的时间决定。\n 蓝牙在有效距离内易断开 断开原因为:0x08(timeout)\n考虑调整晶振精度参数，降低精度要求：比如从20ppm改为50ppm\n参考资料： https://devzone.nordicsemi.com/f/nordic-q-a/29786/ble_hci_connection_timeout-and-nrf_clock_lf_xtal_accuracy_xx_ppm/118161#118161\n nRF52接仿真器能运行接电源不能运行 可能原因有：\n 软件使能了 DCDC，但硬件未有外部 DCDC 电路。关闭 DCDC 可修复。 printf 重定向问题。Case ID: 207373   nRF52 FDS库在o2优化等级报错 问题： 在o2优化等级下，被写入的数据指针会有非 word 对齐的情况，此时会报错。\n解决： 对需要使用 fds 写入的数据均使用强制 word 对齐。在 SES 中可使用__ALIGN(4)\n nRF52 使用P0.21作为IO口 编译时更改\n去掉CONFIG_GPIO_AS_PINRESET宏，重新完全编译。 使用nrfjrog -eraseuicr擦除 UICR 区域。因为使用 IDE 烧录是不会主动擦除 UICR 的，会导致 reset 引脚的配置没有改变。\n发行后更改\n使用如下函数可以禁用UICR中的reset引脚复位功能。\n/** Function to disable pin reset by writing an invalid configuration (all 0) to PSELRESET[1] */ static void disable_pin_reset(void) { // Only perform if needed (which is the first time this code runs)  if (NRF_UICR-\u0026gt;PSELRESET[1] != 0) { NRF_LOG_INFO(\u0026#34;Disabling pin reset.\u0026#34;); NRF_NVMC-\u0026gt;CONFIG = NVMC_CONFIG_WEN_Wen; while (NRF_NVMC-\u0026gt;READY == NVMC_READY_READY_Busy){} NRF_UICR-\u0026gt;PSELRESET[1] = 0; NRF_NVMC-\u0026gt;CONFIG = NVMC_CONFIG_WEN_Ren; while (NRF_NVMC-\u0026gt;READY == NVMC_READY_READY_Busy){} // System reset is needed to update UICR registers.  NVIC_SystemReset(); } }  nRF52 I2S驱动WS2812 参考： https://electronut.in/nrf52-i2s-ws2812\n 当sck引脚功能被占据时，会导致除lrck引脚外的其他引脚输出异常。而lrck仍能正常输出时钟信号。 I2S 的驱动使用了双缓冲方式。在第二缓冲未设置时，会产生NRFX_I2S_STATUS_NEXT_BUFFERS_NEEDED事件回调。 实现单次输出 WS2812 驱动波形的方式如下：  i2s start 第一次会在输出第一个时钟周期时产生NEXT_BUFFER事件，在这里设置第二缓冲 当第一缓冲输出至最后一个时钟周期时，驱动自动切换至第二缓冲，此时会产生第二次NEXT_BUFFER事件，以此作为波形输出结束的标志。在此时关闭i2s输出   在波形最后添加一个0x00000000的填充，就可以避免有效数据被剪切掉。 I2S输出高4位与低4位需要交换才能与 WS2812 的数据一致。  如：I2S 写入 0x8888E888 则 WS2812 收到 0x80    "},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/openocd/","title":"OpenOCD","tags":[],"description":"在线调试工具","content":"Ubuntu sudo apt install openocd\nWindows 备选方案是使用choco安装。\n使用choco安装的openocd最新版本为0.10.0，与0.11.0版本命令不兼容。\n可以使用下方xpack的预编译版本\n 下载  http://openocd.org/getting-openocd/ 预编译二进制(win)  https://gnutoolchains.com/arm-eabi/openocd/ https://github.com/xpack-dev-tools/openocd-xpack/releases    安装 直接安装，并将\\bin目录添加进入环境变量PATH即可。\n"},{"uri":"https://xianii.gitee.io/wedoc/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/tdm-gcc/","title":"TDM-GCC[Win]","tags":[],"description":"另一个windows上的GCC工具链","content":"为Windows提供GCC工具。\n备选方案是使用MSYS2安装。需要注意的是，在MSYS2中安装的工具链，要在MSYS2的MINGW终端中使用。\n下载  https://jmeubank.github.io/tdm-gcc/download/  安装 安装完成后，将/bin目录添加进入环境变量PATH即可。\n"},{"uri":"https://xianii.gitee.io/wedoc/notes/osnotes/windows/","title":"Windows","tags":[],"description":"Windows环境下的常用软件","content":"  出于站点性质考虑，仅列出较为通用的软件，比较专业的软件就不在此列出了\n IrfanView 还有更好用的免费图片浏览器么\nPotPlayer 还有更好用的免费视频播放器么\nOBS 就算你不直播，录屏也是极好的\nEverything 强大的索引与搜索引擎\n7zip 压缩与解压\nPowerToys windows的实用工具包\nMotrix 免费好用的下载工具\nTypora 所见即所得的markdown编辑器\nSandboxie 沙盒工具\nWindows Terminal 漂亮好用的终端\nchocolatey Choco包管理器\nACG Player (UWP) 视频播放器，在UWP环境下可用\nWolframAlpha (UWP) 科学计算，虽然不是免费的，但是因为自己已经购买了UWP的版本，而且太过于好用，所以还是列在这里了\n"},{"uri":"https://xianii.gitee.io/wedoc/notes/zephyr/zephyrnote-0/","title":"Zephyr-初探","tags":[],"description":"","content":"环境搭建 0. 环境安装 参照官方文档，在 WSL on windows 和 Ubuntu 系统均成立。\n烧录工具 一些板子默认的烧录工具为 nrfjprog，访问nRF Command Line Tools安装\n一些板子默认的烧录工具为 pyocd，如无意外，会在安装依赖时自动安装上。\n手动则使用 pip3 install pyocd 来安装。安装时，可使用 pip3 install -i \u0026lt;src\u0026gt; 指定国内源提升速度。\npip国内源\n阿里源: https://mirrors.aliyun.com/pypi/simple/\n清华源: https://pypi.tuna.tsinghua.edu.cn/simple/\n中科大源: https://pypi.mirrors.ustc.edu.cn/simple/\n Ubuntu 下安装 nrfjprog\nUbuntu 下使用 ln -s \u0026lt;src\u0026gt; \u0026lt;des\u0026gt; 命令在 /sbin 创建 nrfjprog 的软链接 (注意 src 应当使用绝对路径)，支持安装 deb 包的系统可以直接使用 sudo dpkg -i \u0026lt;deb\u0026gt; 安装\n WSL 环境下可能缺少依赖，需要手动安装 sudo apt install libtinfo5 libncurses5\n 使用 west init 的包可以拷贝至其他环境，避免重复下载耗费大量时间\n 已知问题  west zephyr-export 在 WSL 环境可能无法使用，可以考虑按照官方给出的方式手动编译或者跳过此步。ps. Ubuntu下正常 Fixed requirements.txt 里缺少 pyelftools 工具，需要手动安装 pip3 install pyelftools，否则最后无法编译。 由于 WSL 无法识别到宿主机的 USB，所以无法在 WSL 环境中烧录  建议在 Ubuntu 环境下开发，免去许多奇怪的问题。\n编译 - nrf52832 指定开发板为官方支持开发板 nrf52832_mdk，使用 west 编译官方例程 blinky 如下：\nwest build -p auto -b nrf52832_mdk samples/basic/blinky\n- nrf52840 指定开发板为官方支持开发板 nrf52840dongle_nrf52840，使用 west 编译官方例程 blinky，如下：\nwest build -p auto -b nrf52840dongle_nrf52840 samples/basic/blinky\n烧录 - nrf52832_mdk 默认烧录工具为 pyocd，Ubuntu上可以正常使用 pyocd + cmsis-dap 的组合直接运行 west flash 进行烧录。\n- nrf52840dongle_nrf52840 默认烧录工具为 nrfjprog，Ubuntu上可以正常使用 nrfjprog + jlink 的组合直接运行 west flash 进行烧录。\n已知问题：pyocd 识别不到 jlink，可以使用 pyocd + cmsis-dap 或者 nrfjprog + jlink 的组合进行烧录\n调试 使用 west debug 启动 GDB\n使用 west debugserver 启动 GDB server\n"},{"uri":"https://xianii.gitee.io/wedoc/notes/zephyr/zephyrnote-1/","title":"Zephyr-涉水","tags":[],"description":"","content":"自定义 自定义板子 参考链接：https://docs.zephyrproject.org/latest/application/index.html#custom-board-definition\n自定义板子有两种方式，一种是放到 zephyr/boards/arch/\u0026lt;board\u0026gt; 路径下，一种是放到项目的路径下 \u0026lt;project path\u0026gt;/boards/arch/\u0026lt;board\u0026gt;\n前者将自定义的板子加入了 zephyr 的 device tree，直接通过 west build -b \u0026lt;board name\u0026gt; 命令，west 就能找到板子。\n后者则需要指定板子定义的路径，但是可以避免污染原生环境：\nwest build -b \u0026lt;board name\u0026gt; -- -DBOARD_ROOT=${PWD}\n"},{"uri":"https://xianii.gitee.io/wedoc/notes/zephyr/","title":"Zephyr笔记","tags":[],"description":"","content":" 本系列笔记编写于 Zephyr:2.4.99 | SDK:0.11.4 环境\n  Zephyr-初探     Zephyr-涉水     "},{"uri":"https://xianii.gitee.io/wedoc/notes/memo/","title":"备忘杂记","tags":[],"description":"","content":"windows terminal + oh-my-posh3 + theme 为win10配置windows terminal的主题。\n当无法识别AllowPrerelease参数时，可能是因为PowershellGet版本太旧。\n通过Get-module PowershellGet取得当前版本\n通过Find-module PowershellGet取得最新版本\n通过Install-Module PowershellGet -Force安装最新版本\n 安装 Install-Module posh-git -Scope CurrentUser\nInstall-Module oh-my-posh -AllowPrerelease -Scope CurrentUser\n如遇魔女结界，则使用爱与魔法。\n配置 使用notepad $PROFILE编辑powershell的配置文件，添加如下内容：\nImport-Module posh-git Import-Module oh-my-posh Get-PoshThemes Set-PoshPrompt -Theme Paradox 打开windows terminal的配置文件，为powershell添加如下配置，可以使得终端打开时的默认路径即为打开的目录。\n\u0026#34;startingDirectory\u0026#34; : null 然后更改字体和颜色主题，可以直接添加到defaults里面，这样直接对所有终端都生效：\n\u0026#34;fontFace\u0026#34;: \u0026#34;Monofurbold NF\u0026#34;, \u0026#34;colorScheme\u0026#34;:\u0026#34;Tango Dark\u0026#34; 其中，字体需要安装，地址见参考文献。\n官方使用的字体是Meslo LGM NF，体积比较大(63.8Mb)。\n这里选用的是微软出品的Cascadia Code PL体积比较小(7.8Mb)。\n根据官方描述，任意的Nerd Font应当都是兼容的。可以在nerdfonts.com网站浏览。\n 参考文献: https://github.com/JanDeDobbeleer/oh-my-posh3 https://ohmyposh.dev/docs/ https://www.nerdfonts.com/ https://github.com/microsoft/cascadia-code/releases https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Monofur.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip  zsh + oh my zsh + theme 为Linux安装zsh shell并配置主题。\n首先：sudo apt install zsh -y\n然后：wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh 下载安装脚本。由于魔女结界的存在，可能需要使用爱与魔法。\nchmod +x install.sh 最后运行安装脚本即可。\n修改默认shell为zsh后，需要记得对于~/.bashrc的操作都要换成~/.zshrc\n 安装主题 执行git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\n然后：修改 ~/.zshrc 的 ZSH_THEME=\u0026quot;powerlevel10k/powerlevel10k\u0026quot;\n处于魔女结界内的用户可以使用 gitee 源替代：git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k\n重启 shell，运行 zsh 进行配置。\n需要重新配置时，运行p10k configure即可。\ngdbgui + arm cross debug 参考：https://www.gdbgui.com/guides/\n安装 gdbgui: https://www.gdbgui.com/installation/\n然后需要编译一个交叉调试版本的 gdb。 首先下载 gdb 源码：https://www.gnu.org/software/gdb/download/\n解压源码，进入源码目录。\n安装编译依赖：sudo apt install texinfo\n以 linux 调试 arm 为例：\n执行 ./configure --host=x86_64-pc-linux-gnu --build=x86_64-pc-linux-gnu --target=arm-none-eabi 配置编译参数。\n编译 make -j8\n安装 sudo make install\n经过以上步骤，就可以使用编译好的 linux-\u0026gt;arm 版本的 gdb 了。\n最后使用 gdbgui -g arm-none-eabi-gdb 来启动 gdbgui 就行了。\nGitea添加TeX支持 例: $CheckSum = \\sum_5^n n \\oplus A_n$ 和 $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$\n在templates/custom目录下新建header.tmpl，内容如下：\n\u0026lt;script\u0026gt; MathJax = { tex: { inlineMath: [[\u0026#39;$\u0026#39;, \u0026#39;$\u0026#39;], [\u0026#39;\\\\(\u0026#39;, \u0026#39;\\\\)\u0026#39;]], displayMath: [[\u0026#34;$$\u0026#34;, \u0026#34;$$\u0026#34;], [\u0026#34;\\\\[\u0026#34;, \u0026#34;\\\\]\u0026#34;]] }, svg: { fontCache: \u0026#39;global\u0026#39; } }; \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; id=\u0026#34;MathJax-script\u0026#34; async src=\u0026#34;https://cdn.bootcdn.net/ajax/libs/mathjax/3.0.5/es5/tex-svg.js\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; 渲染方式可以更改为如下面的其他方式等：\n \u0026lt;script src=\u0026quot;https://cdn.bootcdn.net/ajax/libs/mathjax/3.0.5/es5/tex-chtml.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.bootcdn.net/ajax/libs/mathjax/3.0.5/es5/tex-mml-svg.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.bootcdn.net/ajax/libs/mathjax/3.0.5/es5/tex-mml-chtml.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  Qnap ARM NAS定期删除文件 在大多数桌面版 Linux 中会使用 crontab -e 来编辑 crontab 配置，但是注意不要在威联通中使用这种方法，威联通在重启的时候会覆盖使用这种方式写入的配置。如果想要永久的保存配置，应该使用\nvi /etc/config/crontab 然后写入配置，比如\n1 4 * * * /share/homes/account/scripts.sh  另外需要注意别忘记添加可执行权限 chmod +x filename.sh\n 重启 crontab\ncrontab /etc/config/crontab \u0026amp;\u0026amp; /etc/init.d/crond.sh restart 删除文件脚本如下：\n#!/bin/bash keep_days=7 log_path=/share/临时文件共享/ find $log_path -type f -mtime +$keep_days -print0 | while IFS= read -r -d \u0026#39;\u0026#39; file; do rm -f \u0026#34;$file\u0026#34; done find $log_path -type d -print0 | sort -nzr | while IFS= read -r -d \u0026#39;\u0026#39; dir; do rmdir --ignore-fail-on-non-empty \u0026#34;$dir\u0026#34; done Win10 安装 WSL2  参考：https://docs.microsoft.com/en-us/windows/wsl/install-win10  管理员权限下运行：\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart wsl --set-default-version 2 执行上面命令时如果看到：\n WSL 2 requires an update to its kernel component.\n 则需要安装MSI Linux kernel update package，详见 https://aka.ms/wsl2kernel\n安装后再执行上面命令即可。\n之后即可直接通过商店安装WSL的Linux发行版了。\nESP32-IDF POWERSHELL环境 默认IDF的powershell配置需要在SDK目录下执行。再切换回项目目录有些繁琐。\n使用Push-Location和Pop-Location命令则可以保存和恢复到项目目录。\n可以使用别名pushd和popd。\npushd Set-Location F:/_rSoftware/esp-idf F:/_rSoftware/esp-idf-tools/Initialize-Idf.ps1 popd "},{"uri":"https://xianii.gitee.io/wedoc/docs/tools/","title":"工具链","tags":[],"description":"","content":"  ARM-GCC  ARM-GCC工具链\n   gdbgui[Linux]  linux上的gdb图形前端\n   make[Win]  一个维护截止于2006年的make.exe\n   MSYS2[Win]  windows上的软件分发和构建平台\n   OpenOCD  在线调试工具\n   TDM-GCC[Win]  另一个windows上的GCC工具链\n   "},{"uri":"https://xianii.gitee.io/wedoc/docs/","title":"开发环境","tags":[],"description":"","content":"  工具链    ARM-GCC   gdbgui[Linux]   make[Win]   MSYS2[Win]   OpenOCD   TDM-GCC[Win]    集成环境     "},{"uri":"https://xianii.gitee.io/wedoc/notes/magic/","title":"愛と魔法","tags":[],"description":"","content":"代理魔法 Git 设置：\n git config --global http.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080  取消：\n git config --global --unset http.proxy git config --global --unset https.proxy  Linux shell 设置：\n export http_proxy=http://127.0.0.1:1080 export https_proxy=https://127.0.0.1:1080 export https_proxy=\u0026quot;socks5://127.0.0.1:1080\u0026quot;  取消：\n 命令只对当前终端生效，重启终端即可 或者unset http_proxy  Powershell  $Env:http_proxy=\u0026quot;http://127.0.0.1:1080\u0026quot;; $Env:https_proxy=\u0026quot;http://127.0.0.1:1080\u0026quot;  cmd 设置：\n set http_proxy=http://127.0.0.1:1080 set https_proxy=http://127.0.0.1:1080 set http_proxy_user=user set http_proxy_pass=pass set https_proxy_user=user set https_proxy_pass=pass  取消：\n set http_proxy= set https_proxy=  验证 由于 ping 不走代理，可以使用 curl -v https://www.google.com 验证。\n换源魔法 Pip  阿里源: https://mirrors.aliyun.com/pypi/simple/ 清华源: https://pypi.tuna.tsinghua.edu.cn/simple/ 中科大源: https://pypi.mirrors.ustc.edu.cn/simple/  使用 pip3 install -i \u0026lt;src\u0026gt; \u0026lt;package name\u0026gt; 临时指定安装源\n若需要全局换源，则修改~/.pip/pip.conf文件如下：\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple/ [install] trusted-host = pypi.tuna.tsinghua.edu.cn apt  中科大源: https://mirrors.ustc.edu.cn/ubuntu/ 阿里源: http://mirrors.aliyun.com/ubuntu/  修改 /etc/apt/sources.list\n使用vim替换可参考如下正则:\n:%s/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.ustc.edu.cn/g\n其他魔法 Github 全站镜像  https://github.com.cnpmjs.org/ https://hub.fastgit.org  上面是两个整站镜像，可以浏览和下载。\n不建议登录，因为不是直接访问原站，存在安全隐患。\nRelease镜像  download.fastgit.org  将网址中的 github.com 替换为 download.fastgit.org 即可\n假设下载链接为 https://github.com/A/A/releases/download/1.0/1.0.tar.gz\n转换为 https://download.fastgit.org/A/A/releases/download/1.0/1.0.tar.gz 下载即可\n下载加速  https://ghproxy.com https://gh.api.99988866.xyz  Raw加速  https://7ed.net/gra https://cdn.jsdelivr.net/gh  将网址中的 raw.githubusercontent.com 替换为 raw.sevencdn.com 即可\n将网址中的 github.com 替换为 cdn.jsdelivr.net/gh 即可。\nps. jsdelivr不支持exe下载。\nSwitchHosts! 一个可以方便的管理 hosts 配置的软件。\n左边栏 =\u0026gt; 设置 =\u0026gt; 自定义命令可以添加每次更改 hosts 后执行的命令。\nwindows可以添加ipconfig /flushdns命令，令其每次更改 hosts 后自动刷新。\n"},{"uri":"https://xianii.gitee.io/wedoc/notes/frameworks/","title":"技术架构","tags":[],"description":"","content":"Electron  使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用\n  优点：\n  缺点：\n  Flutter2  创建高性能、跨平台的移动应用\n  优点：\n  缺点：\n  Golang + Fyne  基于 Golang 的跨平台Material Design风格的GUI库\n  优点：\n  缺点：\n  Golang + Wails  使用 Golang 和 Web 技术构建桌面应用\n  优点：\n后端使用标准Golang\n使用任意前端技术构建UI\n单条命令绑定Golang方法到前端\n原生渲染，无需嵌入浏览器\n共享事件系统\n原生文件对话框\n强大的命令行工具\n多平台\n  缺点：\n  Arduino  优点：\n  缺点：\n  NodeMCU  优点：\n  缺点：\n "},{"uri":"https://xianii.gitee.io/wedoc/notes/","title":"指导笔记","tags":[],"description":"","content":"  nRF52开发笔记     Zephyr笔记    Zephyr-初探   Zephyr-涉水    备忘杂记     愛と魔法     技术架构     装机笔记    Linux   Windows    "},{"uri":"https://xianii.gitee.io/wedoc/usage/","title":"模板用例","tags":[],"description":"","content":"Attachments https://learn.netlify.app/en/shortcodes/attachments/\n Mermaid https://learn.netlify.app/en/shortcodes/mermaid/\n Badges  Icons  Buttons Github   Github  Github    Columns  Tabs  Panels  Notice This is the note notice.\n This is a tip notice.\n This is a warning notice.\n This is a info notice with title text\n  Expand   点击展开   阿巴阿巴阿巴阿巴阿巴 阿巴阿巴阿巴阿巴阿巴 `rm / -rf`   "},{"uri":"https://xianii.gitee.io/wedoc/notes/osnotes/","title":"装机笔记","tags":[],"description":"","content":" 为了在重装系统时，能更快速的安装完常用的软件，建立此笔记。\n  Linux     Windows     "},{"uri":"https://xianii.gitee.io/wedoc/docs/env/","title":"集成环境","tags":[],"description":"","content":"  "}]